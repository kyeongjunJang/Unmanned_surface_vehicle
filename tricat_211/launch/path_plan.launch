<?xml version="1.0" encoding="UTF-8"?>

<launch>
<!--FAKE-->
	<!--<include file="$(find obstacle_detector)/launch/virtual_scanner.launch"/>-->

<!--211Node-->
	<node pkg="tricat_211"  type="gps_converter.py" name="ENU_Converter" respawn="true"/>
	<node pkg="tricat_211"  type="compass_from_magnetic_field.py" name="Compass" respawn="true"/>
	<node pkg="tricat_211"  type="obstacle_filter_short.py" name="Obstacle_Filter" respawn="true"/>
	<node pkg="tricat_211"  type="path_plan.py" name="Path_Plan" respawn="true" output="screen"/>
        <!--<node pkg="tricat_211"  type="path_plan_simulation.py" name="Path_Plan" respawn="true" output="screen"/>-->
	<!--<node pkg="tricat_211"  type="path_plan_simulation_window.py" name="Path_Plan_Window"/>-->

<!--PARAMETER-->
	<rosparam command="load" file="$(find tricat_211)/params/path_plan_param.yaml"/>

<!--LiDAR-->
	<node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
	    <param name="serial_port"         type="string" value="/dev/ttyLiDAR"/>  
	    <param name="serial_baudrate"     type="int"    value="256000"/>
	    <param name="frame_id"            type="string" value="world"/>
	    <param name="inverted"            type="bool"   value="false"/>
	    <param name="angle_compensate"    type="bool"   value="true"/>
	    <param name="scan_mode"           type="string" value="Stability"/>
	</node>

	<node pkg="tf" type="static_transform_publisher" name="world_to_scanner" output="screen" args="0 0 0 0 0 0 world scanner 10"/>
 
	<node pkg="obstacle_detector" type="obstacle_detector" name="obstacle_detector" output="screen">
	    <param name="world_frame"     type="string" value="world"/>
	    <param name="scanner_frame"   type="string" value="scanner"/>
 
	    <param name="use_scan"            type="bool" value="true"/>
	    <param name="use_pcl"             type="bool" value="false"/>
	    <param name="transform_to_world"  type="bool" value="true"/>
	    <param name="use_split_and_merge" type="bool" value="false"/>

	    <param name="min_group_points"    value="3"/>
	    <param name="max_group_distance"  value="0.100"/>
	    <param name="distance_proportion" value="0.006136"/>
	    <param name="max_split_distance"  value="0.100"/>

	    <param name="max_merge_separation" value="0.200"/>
	    <param name="max_merge_spread"     value="0.070"/>
	    <param name="max_circle_radius"    value="0.300"/>
	    <param name="radius_enlargement"   value="0.050"/>

	    <param name="max_scanner_range"    value="10.0"/>
	    <param name="max_x_range"          value="0.0"/>
	    <param name="min_x_range"          value="-10.0"/>
	    <param name="max_y_range"          value="5.0"/>
	    <param name="min_y_range"          value="-5.0"/>
	</node>
  
	<node pkg="obstacle_detector" type="obstacle_visualizer" name="obstacle_visualizer" output="screen"/>
  
	<node pkg="rviz" type="rviz" name="rviz" output="screen" args="-d $(find obstacle_detector)/resources/detector.rviz"/>

<!--GPS-->
	<include file="$(find ublox_gps)/launch/ublox_device.launch">
	    <arg name="node_name" value="ublox_gps"/>
	    <arg name="param_file_name" value="zed-f9p"/>
	    <arg name="output" value="screen"/>
	    <arg name="respawn" value="true"/>
	    <arg name="respawn_delay" value="30"/>
	    <arg name="clear_params" value="false"/>
	</include>

	<!--<node pkg="ntrip_ros" type="ntripclient.py" name="ntrip_ros">
	    <param name="rtcm_topic" value="/send_rtcm"/>
	    <param name="ntrip_server" value="vrs3.ngii.go.kr:2101"/>
	    <param name="ntrip_user" value="zzjune0709"/>
	    <param name="ntrip_pass" value="ngii"/>
	    <param name="ntrip_stream" value="VRS-RTCM31"/>
	    <param name="nmea_gga" value="$GPGGA,024539.902,3723.004,N,12639.255,E,1,12,1.0,0.0,M,0.0,M,,*60"/>
	</node>-->

<!--IMU-->
	<node pkg="myahrs_driver" type="myahrs_driver" name="IMU">
  	    <param name="port" value="/dev/ttyIMU" />
	    <param name="baud_rate" value="115200" />
 	</node>

<!--Arduino-->
	<node pkg="tricat_211" type="serial_node.py" name="arduino" args="/dev/ttyARDUINO" respawn="true"/>

<!--RQT graph-->
	<node name="rqt" pkg="rqt_graph" type="rqt_graph"/>
</launch>
